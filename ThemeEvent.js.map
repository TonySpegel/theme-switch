{"version":3,"file":"ThemeEvent.js","sourceRoot":"","sources":["src/ThemeEvent.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH;;;;;;;;;;;GAWG;AACH,MAAM,OAAO,UAAW,SAAQ,KAAK;IAIjC,YAAY,SAAiB;QACzB,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QAHjD,cAAS,GAAG,EAAE,CAAC;QAIX,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;;AANe,oBAAS,GAAG,aAAsB,CAAC","sourcesContent":["/**\n * Copyright Â© 2022 Tony Spegel\n */\n\n/**\n * ThemeEvent transports the name of a theme so that \n * a host can react to it accordingly.\n * \n * Listening for the event:\n * window.addEventListener('theme-event', (themeEvent) => {\n *   const {themeName} = themeEvent;\n * });\n * \n * Dispatch the event:\n * window.dispatchEvent(new ThemeEvent('auto'));\n */\nexport class ThemeEvent extends Event {\n    static readonly eventName = 'theme-event' as const;\n    themeName = '';\n\n    constructor(themeName: string) {\n        super(ThemeEvent.eventName, {bubbles: true});\n        this.themeName = themeName;\n    }\n}\n"]}